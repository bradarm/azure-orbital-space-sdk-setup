# This builds an intermediate Python image layer that can be used to build a Python-based payload-app container image

ARG PYTHON_VERSION="0.0"

# Stage 1: Stage system dependencies used by python packages
FROM python:${PYTHON_VERSION}-slim as system-dependencies
ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update && apt-get install -y --no-install-recommends \
        # Essential tools
        build-essential \
        ca-certificates \
        curl \
        dirmngr \
        gnupg2 \
        wget \
        tar \
        make \
        # Compilers and build tools
        gcc \
        llvm \
        cmake \
        gfortran \
        # Compression libraries
        bzip2 \
        lzma \
        xz-utils \
        zlib1g \
        # C libraries
        libc6 \
        musl \
        # Database libraries
        libdb5.3 \
        sqlite3 \
        # XML libraries
        libexpat1 \
        libxml2 \
        libxmlsec1 \
        # Other libraries
        libffi8 \
        libgdbm6 \
        libncurses5 \
        libncursesw5 \
        libreadline8 \
        libssl3 \
        uuid-runtime \
        # Linear algebra libraries
        libblas3 \
        liblapack3 \
        libatlas3-base \
        libopenblas64-0 \
        # HDF5 support
        libhdf5-103 \
        # Compression support
        libzstd1 \
        liblz4-1 \
        # Image processing and codecs
        libjpeg62-turbo \
        libpng16-16 \
        libtiff6 \
        libavcodec59 \
        libavformat59 \
        libswscale6 \
        libv4l-0 \
        libxvidcore4 \
        liblcms2-2 \
        libwebp7 \
        libopenjp2-7 \
        # Development tools
        tk8.6 \
    && rm -rf /var/lib/apt/lists/*


# Stage 1.5: Install Poetry
WORKDIR /opt/poetry
ENV POETRY_NO_INTERACTION=1 \
  POETRY_HOME='/opt/poetry' \
  POETRY_VERSION=1.8.3 \
  PATH="/opt/poetry/bin:$PATH"
  RUN curl -sSL https://install.python-poetry.org | python3 - || (cat /opt/poetry/poetry-installer-error-*.log && false)


# Stage 2: Pull the GDAL image to get the GDAL shared libraries and dependencies
FROM ghcr.io/osgeo/gdal:ubuntu-small-3.9.1 as gdal


# Stage 3: Construct the final image
FROM scratch as final
COPY --from=gdal /usr/bin/ /usr/local/bin/
COPY --from=gdal /usr/include/ /usr/local/include/
COPY --from=gdal /usr/lib/ /usr/local/lib/
COPY --from=system-dependencies /usr/ /usr/
COPY --from=system-dependencies /etc/ /etc/
COPY --from=system-dependencies /lib/ /lib/
COPY --from=system-dependencies /lib64/ /lib64/
COPY --from=system-dependencies /bin/ /bin/
COPY --from=system-dependencies /opt/ /opt/

# Set bash as the shell
SHELL ["/bin/bash", "-c"]